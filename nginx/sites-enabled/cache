proxy_cache_path /data/nginx/cache levels=1:2 keys_zone=mycache:10m max_size=10g inactive=7d;
log_format cache_st '$remote_addr - $upstream_cache_status [$time_local]  ' '"$request" $status $body_bytes_sent ' '"$http_referer" "$http_user_agent"';
log_format cachelog '$time_iso8601 $request_time $remote_addr $bytes_sent $scheme://$host$request_uri "$http_user_agent" "$request " $upstream_cache_status "$http_referer"';



upstream origin_llnw {
        server web1.on2v.com:8080 max_fails=10 fail_timeout=30s;
        server web2.on2v.com:8081 max_fails=10 fail_timeout=30s backup;
}


server {
        listen 80;
        listen [::]:80;
        listen [::]:443 ssl http2; 
        listen 443 ssl http2; 

        ssl_certificate /etc/letsencrypt/live/cache.on2v.com/fullchain.pem; 
        ssl_certificate_key /etc/letsencrypt/live/cache.on2v.com/privkey.pem; 
        include /etc/letsencrypt/options-ssl-nginx.conf; 
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;


        server_name cache.on2v.com web1.on2v.com web2.on2v.com;

        access_log   /var/log/nginx/nginx-cache.log cachelog;

        location ~* \.(php|jsp|java|asp|do|py)$ {

                proxy_cache mycache;
                proxy_cache_key $scheme$host$request_uri;

                expires -1;

                add_header      Cache-Control   'no-cache, no-store, private';
                add_header      Pragma  'no-cache';


                proxy_set_header HOST $host;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Real-IP $remote_addr;


                proxy_pass http://origin_llnw;

        }

        location ~* \.(jpg|jpeg|gif|png|ico|cur|gz|svg|svgz)$ {


              proxy_cache mycache;
              proxy_cache_key $scheme$host$request_uri;

              proxy_cache_revalidate on;
              proxy_cache_min_uses 3;
              proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
              proxy_cache_lock on;

              proxy_cache_valid 200 302 10m;
              proxy_cache_valid 404      1m;
              proxy_cache_valid any 5m;


              expires 30d;

              add_header Cache-Control "public";

              proxy_set_header HOST $host;
              proxy_set_header X-Forwarded-Proto $scheme;
              proxy_set_header X-Real-IP $remote_addr;


              proxy_pass http://origin_llnw;


       }

       location ~* \.(mp4|ogg|ogv|webm|htc)$ {


             secure_link $arg_md5,$arg_expires;
             secure_link_md5 "$secure_link_expires$uri$remote_addr carrot";

             if ($secure_link = "") { return 403; }
             if ($secure_link = "0") { return 410; }

              proxy_cache mycache;
              proxy_cache_key $host$uri;

              expires 1M;

              add_header Cache-Control "public";

              proxy_set_header HOST $host;
              proxy_set_header X-Forwarded-Proto $scheme;
              proxy_set_header X-Real-IP $remote_addr;


              proxy_pass http://origin_llnw;


       }




        location / {

                proxy_cache mycache;
                proxy_cache_key $scheme$host$request_uri;
                proxy_cache_revalidate on;
                proxy_cache_min_uses 3;
                proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
                proxy_cache_lock on;

                proxy_cache_valid 200 302 10m;
                proxy_cache_valid 404      1m;
                proxy_cache_valid any 5m;


                expires 30d;

                add_header      Cache-Control   'no-cache, no-store, private';
                add_header      Pragma  'no-cache';


                proxy_set_header HOST $host;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Real-IP $remote_addr;



                ### nginx plus support options


                # slice  1m;
                # http2_push_preload on;
                # proxy_cache_use_stale

                proxy_pass http://origin_llnw;

        }



}
